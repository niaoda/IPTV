**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing IMDB data from TvGuide websites
* @MinSWversion :
* @Site: allocine.fr
* @Revision 0 - [04/06/2013] Francis De Paemeleere
*     - creation (adjust from allocine.fr.google.ini)
* @Remarks: primary search with allocine.fr self
* @header_end
**------------------------------------------------------------------------------------------------
*
site {url=allocine.fr|cultureinfo=fr-FR|charset=UTF-8|matchfactor=60|searchsite=allocine}
* primary search:
url_primarysearch {url(urlencode=1,2,3,4)|http://www.allocine.fr/recherche/?q=|'title'|}
show_id.scrub {multi()|primary|/film/fichefilm_gen_cfilm=||.html|.html}
*
* imdb url's:
url_mdb_p1 {url|primary|http://allocine.fr/film/fichefilm_gen_cfilm=|show_id|.html}
url_mdb_p2 {url|primary|http://www.allocine.fr/film/fichefilm-|show_id|/casting}
url_mdb_p3 {url|primary|http://www.allocine.fr/film/fichefilm-|show_id|/critiques/presse/}
url_mdb_p4 {url|primary|http://www.allocine.fr/film/fichefilm-|show_id|/critiques/spectateurs/membres-critiques/}
*
* imdb elements
mdb_title.scrub {single()|p1|<div>Titre original</div>|<td>|</td>|</td>} * original title when redirected 
mdb_title.scrub {single()|p1|<meta property="og:title"|content="|" />|" />} * normal title
mdb_title.scrub {multi()|p1|Ce film dans d'autres pays||</span>|</ul>} * aka's
mdb_title.modify {cleanup()}

mdb_productiondate.scrub {single()|p1|<div>Année de production</div>|<td>|</td>|</td>} * original title when redirected 

mdb_actor.scrub {multi()|p2|itemprop="actors"|<span itemprop="name">|</span>|</li>}

mdb_director.scrub {multi()|p2|itemprop="director"|<span itemprop="name">|</span>|</li>}

mdb_starrating.scrub {single()|p1|<span class="note"><span class="acLnk ||</span>|</span>}
mdb_starrating.modify {replace()|">|\|}
mdb_starrating.modify {substring(type=element)|-1 1} * get the last part (should be the rating)

mdb_starratingvotes.scrub {single()|p1|<span class="note" itemprop="ratingValue" content="||"|"}

mdb_description.scrub {single|p1|Synopsis et détails|<p itemprop="description">|</p>|</p>} 
mdb_description.modify {cleanup(tags="<"">")}

mdb_commentsummary.scrub {multi(max=5)|p4|<p itemprop="description" class="margin_10b j_entities"|>|</p>|</p>}    * comments spectateur
mdb_commentsummary.modify {cleanup(tags="<"">")}

mdb_review.scrub {multi()|p3|<div class="review_box review_press">|<p class="margin_10b">|</p>|</p>}            * comments presse
mdb_review.modify {cleanup(tags="<"">")}

* remove emty comments = containing "Voir la critique sur"
******mdb_temp_6.modify {addstart()|'mdb_review'}
******mdb_temp_1.modify {calculate(debug type=element format=F0)|'mdb_review' #} * number of comments
*******mdb_review.modify {clear}
*******loop {('mdb_temp_1' > "0" max=50)|end}
******mdb_temp_1.modify {calculate(format=F0)|1 -} * decrease index
******mdb_temp_2.modify {substring(debug type=element)|'mdb_temp_6' 'mdb_temp_1' 1}
******mdb_temp_3.modify {addstart(debug 'mdb_temp_2' not~ "Voir la critique sur")|####'mdb_temp_2'} * only add non-empty comments
*******end_loop
******
******mdb_review.modify {addstart(debug)|'mdb_temp_3'} * make multi
******mdb_review.modify {replace(debug)|####|\|} * make multi
