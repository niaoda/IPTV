**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: musor.tv
* @MinSWversion: V2.1.9
*   none
* @Revision 12 - [16/05/2021] WGT*Mat8861
* @Revision 11 - [31/01/2020] WGT*Mat8861
* @Revision 10 - [15/12/2016] Gyozo Fulop
*   site changes
* @Revision 9 - [15/12/2016] Gyozo Fulop
*   site changes
* @Revision 8 - [12/11/2016] Gyozo Fulop
*   site changes, index title, title modify 
* @Revision 7 - [28/07/2016] Blackbear199
*   showsplit fix,details page fixes
* @Revision 6 - [25/2/2016] Blackbear199
*   fix broken scrubs
* @Revision 5 - [27/2/2014] Francis De Paemeleere
*   fix index_urlshow (sporadic) error
*   remove production year form subtitle
* @Revision 4 - [21/2/2014] Peter Fuzek
*   adjust to site changes
* @Revision 3 - [19/11/2013] Peter Fuzek
*   adjust to site changes + added channel logos
* @Revision 2 - [15/08/2013] Francis De Paemeleere
*   adjust to site changes
* @Revision 1 - [06/06/2012] Jan van Straaten
*   1 improved removal of empty shows in showsplit, index_showsplit loop removes 'two' and 'three' distant entries if equal, index_episode in stead of episode
* @Remarks
* @header_end
**------------------------------------------------------------------------------------------------

site {url=musor.tv|timezone=UTC+01:00|maxdays=14|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=HU|episodesystem=onscreen|firstshow=now}
*
url_index{url|https://musor.tv/napi/tvmusor/|channel|/|urldate}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy.MM.dd}
*
index_urlchannellogo {url(scope=datelogo)|https://www.musor.tv|class="channelheaderlink">|<img src="|"|</a>}
*
index_showsplit.scrub {multi|<div class="multicolumn multicolumndayprogarea">|<time class="smartpe_time||</section>}
*
index_start.scrub {single|itemprop="startDate|content="|"|</td>}
index_title.scrub {single|<h3 class="smartpe_progtitle|>|</a>|</h3>}
index_title.modify {cleanup(tags="<"">")}
index_subtitle.scrub {single|<div class="smartpe_progshortdesc" itemprop="description">||</div>|</div>}
index_productiondate.modify {substring(type=regex)|'index_subtitle' "\d{4}"}
index_subtitle.modify {remove(type=regex)|\,\d{4}$}
index_description.scrub {single|<div class="smartpe_progentrylong">||</div>|</div>}
index_description.modify {replace|<br>|\n}
index_description.modify {cleanup}
*
index_urlshow {url|https://www.musor.tv|href="||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
title.scrub {single|<td class="eventinfotitle"|">|</td>|</td>}
description.scrub {multi(separator="<br>" exclude="Rendezte:" "Főszereplők:" "imgdb_image.php" "mainimage.php" "mainimage_small.php" "E-mail")|<td class="eventinfolongdesc"|">|</td>|</td>} 
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
director.scrub {single(separator=", "";")|Rendezte:||<|<}
director.scrub {single(separator=", "";")|Rendező:||<|<}
actor.scrub {single(separator=", ")|Főszereplők:||<|<div>} 
rating.scrub {single|<span class="nownextrating"><img src="/images/etc/||.|.}
category.scrub {single(separator=":""/")|<td class="eventinfocontenttype"|">|</td>|</td>}
showicon.scrub {url|https://www.musor.tv/img/|<img|src="/img/|"|</div>}
*
index_productiondate.modify {substring(type=regex)|'index_subtitle' "\s*,*\s*([1-2]\d{3})\s*$"}
index_subtitle.modify {remove(type=regex)|'index_subtitle' "\s*,*\s*\d{4}-*'index_productiondate'\s*$"} 
*
scope.range {(showdetails)|end}
titleoriginal.modify {addstart|'description'}
titleoriginal.modify {substring(type=element)|0 8} * only select the first 3 lines to get any original title
titleoriginal.modify {substring(type=regex)|"^[\s]*\((.*)\)[\s]*$"} * the line that starts with ( and ends with ) is the original title
titleoriginal.modify {remove(type=regex)|"(?i)^(txt.*)$"}
titleoriginal.modify {remove(type=regex)|"(?i)^(hd.*)$"}
description.modify {remove(type=regex)|"^([\s]*\(.*\)[\s]*)$"} * remove lines that start with ( and end )
director.modify {cleanup(tags="<"">")}
titleoriginal.modify {cleanup(style=name)}
subtitle.modify {cleanup(style=name)}
rating.modify {remove|pg_}
rating.modify {addend(not "")|+}
starrating.modify {replace|Ajánlatunk!|1.0}
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://musor.tv/kedvencek1}
*index_site_channel.scrub {multi|<table class="channellisttable"|class="channellistentry">|</a>|</table>}
*index_site_id.scrub {multi|<table class="channellisttable"|<a href="//musor.tv/mai/tvmusor/|" class|</table>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
