﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: zingzing.co.uk
* @MinSWversion: 1.1.1/54
* @Revision 0 - [19/05/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=zingzing.co.uk|timezone=UTC|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=GB|episodesystem=onscreen}
url_index{url|http://www.zingzing.co.uk/ajax/}
urldate.format {datenumber|UNIX|0} 
*
url_index.headers {method=POST}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index.headers {accept=application/json, text/javascript, */*; q=0.01}
url_index.headers {contenttype=application/x-www-form-urlencoded}
url_index.headers {postdata=method=bounds&channels='channel'&start='urldate'&stop='index_variable_element'}
*
scope.range{(urlindex)|end}
index_variable_element.modify {set(format=date,yyyy/MM/d H:mm)|'urldate'}
index_variable_element.modify {calculate(format=date,yyyy/MM/d H:mm)|1:0:00 +}
index_variable_element.modify {calculate(format=date,unix)}
end_scope
*
index_showsplit.scrub {regex||\[\d+.+?,\d+\]||}
*
scope.range{(indexshowdetails)|end}
index_start.scrub {regex||\[(\d+),||}
index_duration.scrub {regex||\[\d+,(\d+),||
index_duration.modify {calculate(format=F0)|60 /}
index_title.scrub {regex||\[\d+,\d+,\"(.+?)\",||}
index_description.scrub {regex||\[\d+,\d+,\".+?\",\"(.+?)\",||}
index_description.modify {remove|\}
index_description.modify {remove(type=regex)|\s\[.+?\]\.$}
index_description.modify {remove(type=regex)|^New. }
index_category.scrub {regex||,(\d+)\]$||}
*
index_episode.modify {substring(type=regex)|'index_description' "(\(S\d+\sEp\s\d+\))$"}
index_description.modify {remove('index_episode' not "")|'index_episode'}
index_episode.modify {replace(type=regex)|\sEp\s|E}
index_episode.modify {substring(type=regex)|"\((.+?)\)"}
*
index_episode.modify {substring(type=regex)|'index_description' "(\(S\d+,\sep\s\d+\))$"} *alt eposide style
index_description.modify {remove('index_episode' not "")|'index_episode'}
index_episode.modify {replace(type=regex)|,\sep\s|E}
index_episode.modify {substring(type=regex)|"\((.+?)\)"}
*
index_subtitle.modify {substring(type=regex)|'index_description' "^(.+?):\s"}
index_description.modify {remove('index_subtitle' not "")|'index_subtitle': }
*
index_productiondate.modify {substring(type=regex)|'index_description' "\(\d{4}\)"}
index_description.modify {remove('index_productiondate' not "")|'index_productiondate'}
index_productiondate.modify {substring(type=regex)|"\((.+?)\)"}
*
index_category.modify {replace|0|General}
index_category.modify {replace|1|Specialist}
index_category.modify {replace|2|Children}
index_category.modify {replace|3|Entertainment}
index_category.modify {replace|4|Music}
index_category.modify {replace|5|News\|Documentry}
index_category.modify {replace|6|Movie}
index_category.modify {replace|7|Sports}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
*
* disable url_index.headers above
*
** @auto_xml_channel_start
*url_index{url|http://www.zingzing.co.uk/options/}
*index_site_id.scrub {|}
*index_temp_9.scrub {multi(separator=",")|channelDB:{||},|},}
*index_site_id.modify {substring(type=regex)|'index_temp_9' "\"(\d+)\":"}
*index_site_channel.modify {substring(type=regex)|'index_temp_9' ":\"(.+?)\""}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
