**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: cinemax.tv
* @MinSWversion:
* @Revision 0 - [07/03/2016] 1NSdbZVbpZDX
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=cinemax.tv|timezone=UTC+00:00|maxdays=31|cultureinfo=en-GB|charset=iso-8859-1|titlematchfactor=90|nopageoverlaps}
*site {ratingsystem=ES|episodesystem=onscreen|grabengine=|firstshow=0|firstday=0000000}

urldate.format {datestring|MM/dd/yyyy}
url_index{url |http://##COUNTRY##/ajax.grid/?pid=4&cul=pt&sid=7&zoh=&fecha=|urldate|} *3/8/2016
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages

scope.range {(urlindex)|end}
index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
url_index.modify {replace|##COUNTRY##|'index_temp_1'}
end_scope

index_showsplit.scrub {multi |<table>|<tr class="gridRow |</tr>|</table>}
index_start.scrub {single |gridHora|>|</th>|}
index_title.scrub {single |xxxtitulo">||</div>|} 
*index_urlchannellogo {url| }

scope.range {(indexshowdetails)|end}
*http://br.cinemax.tv/ajax.sinopsisgrid/?prog=TTL600767&cul=pt&bar=0
index_temp_2.scrub {single |"togleSinopsis|','|', '|;">}
index_temp_3.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"} *for urlshow
index_variable_element.modify {set |http://'index_temp_3'/movie/'index_temp_2'/}
index_urlshow.modify {set |'index_variable_element'}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
end_scope

scope.range {(showdetails)|end}
title.scrub {single |<title> Cinemax|\| |</title>|}
titleoriginal.scrub {single |sinopsisTituloO">||</div></h5>|}
subtitle.scrub {single|sinopsisTagline">||</div></h5>|}
description.scrub {single |sinopsisTxt">||</p>|}
director.scrub {regex ||(?:>Dir.+?\n\s).+?>(.*?)<||}
showicon.scrub {single |data-interchange="[||,|}
actor.scrub {single (separator=", ")|Elenco</div>|">|</div>|</div>} *for Latam channel
actor.scrub {single (separator=", ")|Cast</div>|">|</div>|</div>} *for Eng channel
*presenter.scrub {single|}
*producer.scrub {single|}
*writer.scrub {single|}
*composer.scrub {single|}
*rating.scrub {multi|}
*ratingicon.scrub {multi|}
category.scrub {regex ||(?:prod.+?)\d{4}(.*?)<||} *for Latam channel
category.scrub {regex ||(?:Prod.+?)\d{4}(.*?)<||} *for Eng channel
category.modify {remove | / }
productiondate.scrub {regex ||(?:prod.+?)(\d{4})||} *for Latam channel
productiondate.scrub {regex ||(?:Prod.+?)(\d{4})||} *for Eng channel
*starrating.scrub {single|}
*episode.scrub {single|}
*premiere.scrub {single|}
*previousshown.scrub {single|}
end_scope

* operations:

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url |http://us.cinemax.tv/}
*index_site_channel.scrub {multi (debug)|dropdown">|?cc=1">|</a></li>|</nav>}
*index_site_channel.modify {addstart |Cinemax (}
*index_site_channel.modify {addend |)}
*index_site_id.scrub {multi (debug)|dropdown">|"http://|/?cc=1|</nav>}
*index_site_id.modify {addstart|COUNTRY:}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
