<?xml version="1.0" encoding="utf-8"?>
<!-- Configuration file for the REX (Re-arrange and Edit Xmltv) postprocessor of WebGrab+Plus
by Jan van Straaten, July 2012
WebGrab+Plus Version V1.1.1
-->
<!--  Introduction:
  The purpose of this postprocessor is to re-arrange and edit the xmltv file created by the grabber section of WebGrab+Plus.
  This can be useful or necessary if the EPG viewer of the PVR/Media-Centre used, or the xmltv importer it uses, does not support all the xmltv elements in the xmltv file created by WG++.
  It can:
  - Move the content of xmltv elements to other xmltv elements
  - Merge the content of several xmltv elements 
  - Add comments/prefix/postfix text
  - Remove or create xmltv elements   
  E.g.: If the PVR doesn't support import of credit elements (actors, directors etc.) it can add the content of them to the description and remove the original credit elements which are useless.
  Or , it can move the episode data to the beginning or end of the subtitle element
  Etc. ..  
  Remark: This postprocessor is only fully effective if the xmltv input has a 'clean' xmltv structure in which the data is properly allocated to the elements. If that is the case depends on the EPG source site and the design of the SiteIni file . Some of the (e.g. customized) siteini files produce xmltv data that targets certain PVR/Media-Centre requirements already. In these cases this postprocessor is less effective /useful.-->

<settings>
  <!--xmltv file : The xmltv target file in which the updated data will be merged with the grabbed EPG.
Because of the incremental nature of the grabbing process this file must be different (name and/or path) from the target file of the grabbing as specified in WebGrab++.Config.xml <filename> !! 
If omitted here or if by mistake the same file is specified, the file path will be changed to  C:\ProgramData\ServerCare\WebGrab\Rex\-->
  <filename>T:\guideREX.xml</filename>
  
  <!-- Configuration of the elements: -->
<!-- Content and Values:-->
  <![CDATA[
  This is best explained in a step by step fashion:
  Suppose you want to move the actors to the end of the desciption. You then specify:
      <desc>'description'\n'actor'</desc>
  The result is the existing 'description' , followed by, on a newline,  the actor(s) separated by the standard WG++ element separator | .
  The result:
      <desc>This is the original description.
  Michael Douglas|Kim Basinger</desc> 
  
  You probably don't like the | as separator between the actors, so you specify anther separator like this:
      <desc>'description'\n'actor(, )'</desc>
  The result:
      <desc>This is the original description.
      Michael Douglas, Kim Basinger</desc>  
      
  You can make this prettier by adding some text to the actors addition:
      <desc>'description'\nActors: 'actor(, )'.</desc>
  The result:
      <desc>This is the original description.
      Actors: Michael Douglas, Kim Basinger.</desc>  
      
  A small problem: Suppose the source xmltv show doesn't have any actors, then the result would be not so pretty:
      <desc>This is the original description.
      Actors: .</desc>  
  To avoid that, the added text can be linked to the element it must be added to, like this:
      <desc>'description'{\nActors: 'actor(, )'.}</desc>
  Result with actors:
      <desc>This is the original description.
      Actors: Michael Douglas, Kim Basinger.</desc>
  And without actors:
      <desc>This is the original description.</desc>
      
  An example with some more elements:
      <desc>'description'{\n\tYear of production: 'productiondate'.}{\n\tProducer: 'producer(, )'.}{\n\tActors: 'actor(, )'.}</desc>
  Result:
      <desc>This is the original description.
        Year of production: 2002.
        Producer: Steven Spielberg.
        Actors: Michael Douglas, Kim Basinger.</desc>
        
  And another one:
      <sub-title>{Episode: 'episode'\t}'subtitle'</sub-title>
  Result:
      <sub-title>Episode: 3.2/12.1    The original subtitle</sub-title> 
      
  You can also remove elements (but not the title!) from the xmltv listing by specifying an empty element, like this:
      <actor></actor>
  This will remove all <actor> elements
  And this:
      <credits></credits>
  Will remove the <credits> element, including all its child elements like <actor> , <producer> etc. ]]> 
<![CDATA[
Summary of Content/Values:
1. Syntax
  - the content of the xmltv-target elements can be specified by means of a mixture of text and element-values.
  - the element-values must be entered by their element-name enclosed by ''
  - multiple value elements (like actor) will be converted to single value elements if the xmltv-target element is a single value element, like <desc>. The individual values will be listed with a (standard WG++ internal element separator) | as separator unless another separator is specified as follows:
'element-name(separator-string)' e.g. 'actor(, )'
  - text and element-names can be linked together by enclosing them by {}. This will ensure that, when the element in it is empty, everything between the {} is ignored. E.g. {\nProduced in : ('productiondate')} 
- the text in the xmltv-target elements may contain the following simple formatting :
    - \n or \r to force a newline
    - \t to add a tab 
    
2. The allowed xmltv-target elements (the ones in the target file specified above) are :
  <title> 
  <sub-title>
  <desc>
  <date> = the xmltv element name containing the productiondate
  <star-rating>
  <review> (=optional new xmltv element)
  <director> e.g to add /substitute the (additional?) mdb-director
  <actor> e.g to add /substitute the (additional?) mdb-actor  
- IMPORTANT! : any of the above listed xmltv-target elements that is specified in this allocation specification, replaces the existing xmltv element and its content!

3. Supported element-names (from the existing xmltv listing, name definitions as in Appendix D) :
  - 'title' 'description' 'starrating' 'subtitle' 'productiondate' 'category' 'director' 'actor' 'presenter' 'writer' 'composer' 'producer' 'rating' 'episode' 'review'  'subtitles' 'premiere' 'previously-shown' 'aspect' 'quality'
  
4. Also supported are the additional elements created by the MDB-postprocessor. 
- Important : This MDB-postprocessor automatically makes use of this REX-postprocessor. In that case the REX-postprocessor uses the allocation specification from the MDB config file mdb.config.xml and ignores the specification entered here.
    - 'mdb-title' 
(if used in the xmltv-target element <title> it will only be added if different from the existing xmltv title, see for more details mdb.config.xml)
    - 'mdb-starrating' 'mdb-description' 'mdb-plot' 'mdb-commentsummary' 'mdb-review'
    
5. Attributes (might need completion)  
  - for each of the xmltv-elements the following attribute can be specified
          (if not specified, the existing one, if present in the xmltv, will be used) :
      - lang   for <title> and <desc> , default : no attribute
      - system   for <star-rating> , default : no attribute
      - type  for <review> , default: type="text"]]>
  
<!-- MP Settings -->
  <desc>{'subtitle'. }{'episode'. }{'productiondate'. }{'starrating' }{['rating']. }{'category(, )'. }{\n· Int.: 'actor(, )'. }{\n· Dirección: 'director(, )'. }{\n >> 'description' }{\n· Presenta: 'presenter(, )'. }{\n· Guión: 'writer(, )'. }{\n· Música: 'composer(, )'. }{\n· Producción: 'producer(, )'.}</desc>
  <star-rating></star-rating>
<!-- country and title original in star-rating-->  
  </settings>

