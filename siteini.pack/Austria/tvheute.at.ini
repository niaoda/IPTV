**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvheute.at
* @MinSWversion: V2.1.3
* @Revision 0 - [15/09/2017] Mat8861 & Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tvheute.at|timezone=Europe/Vienna|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=10|nopageoverlaps}
site {episodesystem=onscreen}
*
urldate.format {datestring|dd-MM-yyyy}
url_index{url|http://tvheute.at/|channel|/|urldate|-im-tv}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
index_showsplit.scrub {multi|<tbody>|<tr>|</tr>|</tbody>}
index_start.scrub {regex||<time datetime='\d{4}-\d{2}-\d{2}\s(\d{2}:\d{2})'>\d{2}:\d{2}<\/time>||}
index_stop.scrub {regex||<time class="until" datetime='\d{4}-\d{2}-\d{2}\s(\d{2}:\d{2})'>\d{2}:\d{2}<\/time>||}
scope.range{(indexshowdetails)|end}
index_title.scrub {single|<strong title="||">} 
index_subtitle.scrub {single|<span class=|"sub">|</span>|</span>}
index_category.modify {substring(type=regex)|'index_subtitle' "(^[A-Z]+.[A-Z]+.[A-Z]+.)\s"}
index_category.modify {remove|,}
index_subtitle.modify {remove|'index_category'|'index_subtitle'}
index_productiondate.modify {substring(type=regex)|'index_subtitle' ".*(\d{4})$"}
index_subtitle.modify {remove()|'index_productiondate'|'index_subtitle'}
index_episode.modify {substring(type=regex pattern="Staffel: 'S1' Folge: 'E1'""Folge: 'E1'")|'index_subtitle' "\((?:Staffel:\s\d+\s)?Folge:\s\d+\)"}
index_subtitle.modify {remove()|'index_episode'|'index_subtitle'}
index_episode.modify {remove|(}
index_episode.modify {remove|)}
index_country.modify {substring(type=regex)|'index_subtitle' "(\,\s.*?)$"}
index_subtitle.modify {remove|'index_country'|'index_subtitle'}
index_country.modify {remove|, }
index_urlchannellogo {url|http://tvheute.at|<img class="logo" src="||" alt}
index_description.scrub {single|<div class=|"description">||</div>|</div>}
index_description.modify {cleanup(tags="<"">")} 
end_scope
*
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow {url|http://tvheute.at|<div class="col-sm-6">|<a href="|" class="btn btn-success">|</a>}
scope.range{(showdetails)|end}
title.scrub {single|<h1>||</h1>}
title.modify {addstart("")|'index_title'}
description.scrub {single|<div class=|"detail">|</div>|</div>}
description.modify {cleanup(tags="<"">")}
director.scrub {single(max=2)|<b>Regie: |</b>|<b>|</div>}
director.modify {cleanup(tags="<"">")}
director.modify {cleanup}
actor.scrub {single(separator=", " max=3)|<b>Darsteller|:||</div>|</div>}
actor.modify {cleanup(tags="<"">")}
productiondate.scrub {single|<p class="short">||</p>}
category.scrub {single()|<p class="short">|<span class="tag">|</span>|</span>}
episode.scrub {regex||<span class="tag">.*?((?:Staffel:\s\d+).*?Folge:\s\d+).*?</p>||}
episode.modify {remove|,}
composer.scrub {single(separator=",")||<b>Musik: </b>|<b>|</div>}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|http://tvheute.at/}
*index_site_id.scrub {multi|<li data-station|href="/|/heute-im-tv">|</li>|</div>}
*index_site_channel.scrub {multi|<li data-station|class="">|</li>|</div>}
*index_site_channel.modify {cleanup(tags="<"">")} 
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
