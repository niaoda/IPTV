**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: zdf.de
* @MinSWversion: V2.1.9
* @Revision 1 - [24/10/2019] WGTeam*Mat8861-small fix
* @Revision 0 - [24/05/2017] Mat8861 & Blackbear199
*  - creation
* @Remarks: 
* @header_end
**------------------------------------------------------------------------------------------------
site {url=zdf.de|timezone=Europe/Berlin|maxdays=7|cultureinfo=de-DE|charset=UTF-8|nopageoverlaps|titlematchfactor=90}
site {ratingsystem=DE|episodesystem=onscreen|keepindexpage}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index{url|http://www.zdf.de/live-tv?airtimeDate=|urldate|}
urldate.format {datestring|yyyy-MM-dd}
index_variable_element.modify {set|'config_site_id'}
index_showsplit.scrub{multi(includeblock="'index_variable_element'" exclude="m-clickarea js-daytime- ")|<section class="b-epg-timeline|<li class="epg-teaser|</li>|</ul>}
index_urlshow {url|http://www.zdf.de|"contentUrl": "||"}
index_urlchannellogo {url|http://www.zdf.de|title="'index_variable_element'|data-src="|"|alt="}
index_start.scrub {regex||<span class="time">(\d{2}\:\d{2})\s-\s\d{2}\:\d{2}</span>||}
index_stop.scrub {regex||<span class="time">\d{2}\:\d{2}\s-\s(\d{2}\:\d{2})</span>||}
index_title.scrub {multi|<span class="visuallyhidden">:</span>|</span>|</a>|</h4>}
title.scrub {single|teaser-title">||</h2}
title.modify {cleanup(tags="<"">")}
subtitle.scrub {regex||<h3 class="overlay-subtitle">(.*?)</h3>||}
description.scrub {single|<p class="overlay-text">||</p>}
description.modify{cleanup(tags="<"">")}
description.modify{cleanup}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://www.zdf.de/live-tv}
*index_site_channel.scrub {multi|data-station="||"}
*index_site_id.scrub {multi|data-station="||"}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
