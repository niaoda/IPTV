**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: gatotv.com
* @MinSWversion:
* @Revision 7 - [18/02/2020] WGT*fix_details
* @Revision 6 - [12/09/2019] WGT*review
* @Revision 5 - [17/09/2017] Blackbear199
*   - start/stop time fix
* @Revision 4 - [25/07/2016] IvanRF
*   - date replace fix
* @Revision 3 - [22/04/2016] 1NSdbZVbpZDX
*   - episode fix, added show details
* @Revision 2 - [05/01/2016] Francis De Paemeleere
*   - remove debug content
* @Revision 1 - [26/02/2015] Francis De Paemeleere
*   - remove new lines from title, ...
* @Revision 0 - [17/02/2015] Francis De Paemeleere
*   - creation
* @Remarks: currently index only (not much details on detail pages)
* @header_end
**------------------------------------------------------------------------------------------------
site {url=gatotv.com|timezone=America/Mexico_City|maxdays=7|cultureinfo=es-MX|charset=UTF-8|titlematchfactor=90|nopageoverlaps|allowlastdayoverflow|firstshow=1}
*
urldate.format {datestring|yyyy-MM-dd}
url_index{url|https://www.gatotv.com/canal/|channel|/|urldate|}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
index_showsplit.scrub {multi()|<table class="tbl_EPG">|<tr class=|</tr>|</table>}
scope.range {(splitindex)|end}
index_showsplit.modify {replace|tbl_EPG_TimesColumnOutOfSchedule|tbl_EPG_TimesColumn}
index_showsplit.modify {replace | \| }
index_showsplit.modify {cleanup(removeduplicates)}
end_scope

index_start.scrub {single(includeblock=1)|<div class="tbl_EPG_TimesColumn|<time datetime="|">|</time>}
index_stop.scrub {single(includeblock=2)|<div class="tbl_EPG_TimesColumn|<time datetime="|">|</time>}
index_title.scrub {regex||^.*?class="div_program_title_on_channel"[^>]*>(.*?)</div>||}
index_title.modify {cleanup(tags="<"">")} 
index_showicon.scrub {regex||^.*?src=\"([^\"]*)\"||}
index_urlchannellogo.scrub {regex||^.*?class=\"div_MainPicture\"[^>]*>\s*<a[^>]*>[^/]*src=\"([^\"]*)\"||}
index_episode.scrub {single(pattern="Temporada 'S1' Episodio 'E1'""Temporada 'S1'"" Episodio 'E1'")|<div class="div_episode_programa_on_channel">|<strong>|</strong>|</div>}
index_subtitle.modify {cleanup}
index_title.modify {cleanup}
index_subtitle.modify {cleanup}


index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
index_urlshow {url ||<a href="||"|}

scope.range {(showdetails)|end}
title.scrub {single()|<h1 itemprop="name">||</h1>|</h1>}
description.scrub {single|"summary">|"description">|</div></div>|}
actor.scrub {multi(max=8)|itemprop="actors"|itemprop="name">|</span>|</span>}
productiondate.scrub {regex ||(\d{4})<\/span><\/a>||}
category.scrub {multi |<strong>Tipo:|nowrap" >|</span>|</table>}
country.scrub {multi |Paises de Origen:|nowrap" >|</span></a>|</table>}
producer.scrub {multi(max=2)|itemprop="producer"|nowrap" >|</span>|</table>}
composer.scrub {multi(max=2)|<strong>Música:|nowrap" >|</span>|</table>}
rating.scrub {single |<strong>Clasificación:|nowrap" >|</span>|</table>}
writer.scrub {single(max=2)|<strong>Basado en:|nowrap" >|</span>|</table>}
titleoriginal.scrub {single |<strong>Título en Idioma Original:|nowrap" >|</span>|</table>}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://www.gatotv.com/guia_tv/completa}
*index_site_id.scrub {regex||class=\"\s*tbl_EPG_row[^>]*>(.*?)</tr>||}
*scope.range {(channellist)|end}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_id.modify {substring(type=regex)|<a [^>]*.*?href=\"([^\"]*)\"[^>]*title=\"[^\"]*\"[^>]*>}
*index_site_id.modify {remove|https://www.gatotv.com/canal/}
*index_site_channel.modify {substring(type=regex)|<a [^>]*.*?href=\"[^\"]*\"[^>]*title=\"([^\"]*)\"[^>]*>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
