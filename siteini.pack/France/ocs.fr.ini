**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: ocs.fr
* @MinSWversion:
* @Revision 0 - [24/12/2017] Mat8861 & Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=ocs.fr|timezone=Europe/Paris|maxdays=7|cultureinfo=fr-FR|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
*
urldate.format {datestring|yyyyMMdd}
*
url_index{url|https://www.ocs.fr/grille-tv?date=|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
*
index_temp_1.modify{set|'config_site_id'}
index_temp_1.modify {replace|85-max|1}
index_temp_1.modify {replace|85-city|2}
index_temp_1.modify {replace|85-choc|3}
index_temp_1.modify {replace|85-geants|4}
index_variable_element.modify {set|'index_temp_1'}
index_showsplit.scrub {multi(includeblock='index_variable_element'/4)|<div class="li-wrapper">|<a|</a>|</li>}
*
index_start.scrub {single|<div class="program-horaire">||</div>}
index_title.scrub {single|<div class="program-title">||</div>} 
index_category.scrub {multi(max=2)|<div class="program-subtitle">|<span>|</span>|<div>}
index_subtitle.scrub {single|<div class="episode-title">||</div>}
index_productiondate.scrub {single|<div class="program-subtitle">|<div>|</div>|</div>}
index_episode.modify {substring(type=regex pattern="S'S1' EP'E1'""S'S1'""EP'E1'")|'index_subtitle' "(S\d+\sEP\d+)\s:\s"}
index_subtitle.modify {remove(type=regex)|(^S\d+\sEP\d+\s:\s)}
index_urlchannellogo.modify {addstart|https://statics.ocs.fr/data_plateforme/'config_site_id'.png}

index_urlshow {url|https://www.ocs.fr|href="||"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
title.modify {addstart("")|'index_title'}
description.scrub {multi|<div class="description">|<p>|</p>|</div>} 
country.scrub{single|pays : </span>|<span class="desclight">|</span>|</div>}
director.scrub {single(separator=", " max=1)|réalisé par : </span>|<span class="desclight">|</span>|</div>}
actor.scrub {multi(separator=", " max=3)|avec :</span></div>|<span class="desclight">|</span>|</div>}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://www.ocs.fr/grille-tv?date=|urldate|}
*index_site_channel.scrub {multi()|<ul class="list-left grid-25 grille-chaines|<h2 class="pageTitle">|</h2>|</ul>}
*index_site_id.scrub {multi|<ul class="list-left grid-25 grille-chaines|src="https://statics.ocs.fr/data_plateforme/|.png">|</ul>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
