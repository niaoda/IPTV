**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv3.lt
* @MinSWversion: V1.1.1/54
* @Revision 0 - [07/22/2020] Karolis Vaikutis
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv3.lt|timezone=Europe/Vilnius|maxdays=7|cultureinfo=lt-LT|charset=utf-8|titlematchfactor=90|episodesystem=onscreen}
urldate.format {datestring|yyyy-MM-dd}
url_index{url|https://www.tv3.lt/programos/|channel|/pilna/|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
* Channel logo
index_urlchannellogo.scrub {single|<a class="big-logo-item|<img src="|" />|</a>}
index_urlchannellogo.modify {addstart|https://www.tv3.lt}
* Shows
index_showsplit.scrub {regex||<div class="program-item-block(.*?<div class="program-detail-hide-block.*?<div class="program-detail-block">.*?<div class="head-block">.*?<div class="image">.*?<\/div>.*?<div class="space"><\/div>.*?<div class="text">.*?<\/div>.*?<\/div>.*?(?:<div class="text-block">.*?<\/div>)?.*?<\/div>.*?)<\/div>||}
* Start time
index_start.scrub {regex||<div class="time">(.*?)</div>||}
* Title
index_title.scrub {regex(||<div class="title">(.*?)</div>||}
* Original Title
index_titleoriginal.scrub {regex||Pavadinimas originalo kalba:.*?<span.*?>(.*?)<\/span>||}
* Description
index_description.scrub {regex||<div class="text-block">(.*?)<\/div>||}
* Actors
index_actor.scrub {regex||Aktoriai:.*?<span.*?>(.*?)</span>||}
index_actor.modify {replace|, |\|}
* Genres
index_category.scrub {regex||Žanras:.*?<span.*?>(.*?)</span>||}
index_category.modify {replace|, |\|}
index_category.modify {cleanup(style=sentence)}
* Year
index_productiondate.scrub {regex||etai:.*?<span.*?>.*?(\d{4}?).*?<\/span>||}
* Season
index_temp_1.scrub {regex||Sezonas:.*?<span.*?>(.*?)</span>||}
index_temp_1.modify {addstart('index_temp_1' not "")|S}
* Episode
index_episode.scrub {regex||Serija:.*?<span.*?>(.*?)</span>||}
index_episode.modify {addstart('index_episode' not "")|E}
index_episode.modify {addstart('index_temp_1' not "")|'index_temp_1'}
index_episode.modify {remove(type=regex)|\s}
* Country
index_country.scrub {regex||Šalis.*?:.*?<span.*?>(.*?)<\/span>||}
index_country.modify {remove(type=regex)|((?:, )\d+)}
index_country.modify {replace|, |\|}
* Show poster
index_showicon.scrub {regex||<div class="image">.*?<img src="(.*?)">.*?<\/div>||}
**------------------------------------------------------------------------------------------------
** 
** 	To create tv3.lt.channels.xml add this line to WebGrab++.config.xml and uncomment the lines below:
**		
**		<channel update="i" site="tv3.lt" site_id="dummy" xmltv_id="dummy">dummy</channel>
**
** @auto_xml_channel_start
*scope.range {(channellist)|end}
*url_index {url|https://www.tv3.lt/programos/logotipai} * For channel list file creation any page should work since the footer of the page is used to extract links to all channels.
*index_site_channel.scrub {multi|<div class="icos-block">|"https://www.tv3.lt/programos/|"|<div class="space-row-block">}
*index_site_id.scrub {multi|<div class="icos-block">|"https://www.tv3.lt/programos/|"|<div class="space-row-block">}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*index_site_channel.modify {cleanup(style=upper)}
*end_scope
** @auto_xml_channel_end 