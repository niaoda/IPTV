**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.boxbg.net
* @MinSWversion: 1.1.1/56.13
* @Revision 1 - [15/07/2020] Sprint_TV
* @Revision 0 - [30/01/2016] Jan van Straaten
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tv.boxbg.net|timezone=Europe/Sofia|maxdays=7|cultureinfo=bg-BG|charset=UTF-8|titlematchfactor=30|nopageoverlaps}
* one week from saterday to saterday?
urldate.format {datestring|ddMMyyyy}
url_index{url|http://tv.boxbg.net/channel/|channel|?day=|urldate|}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages

index_showsplit.scrub {multi|<div class="list-group list-events shadow">|<a href="|</a>}
index_showsplit.modify{replace|\||\n\n\|}
index_start.scrub {regex||(\d{2}:\d{2})\s*?<br>||}
index_title.scrub {regex||</div>\s+?(.+?)\z||}
index_title.modify {remove|/п/}
index_title.modify {cleanup}
index_subtitle.modify {substring(type=regex)|'index_title' ":(.+?)\""}
index_description.modify {substring(type=regex)|'index_title' "\".+\"(.+)"}
index_description.modify {remove(type=regex)|"\A\s*-"}
index_description.modify {cleanup}
index_title.modify {substring(type=regex 'index_title' ~ "\"")|"\"(.+?)\""}
*
index_urlshow {url||||"|"}
index_urlshow.modify {clear("#")}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow.headers {accept=text/html, application/xhtml+xml, image/jxr, */*}
*
title.scrub {regex||<span class="series-title">.+?\((.+?)\)||}
title.modify {set('index_urlshow' "")|'index_title'}
titleoriginal.scrub {regex||<span class="series-title">(.+?)<br>\s+?\(.+?\)||}
description.scrub {regex||<strong> Описание:</strong>(.+?)</p>||}
description.modify {cleanup}
category.scrub {regex||<span>Жанр:</span>(.+?)</div>||}
category.modify {cleanup}
productiondate.scrub {regex||<span>Година:</span>(.+?)</div>||}
starrating.scrub {regex||<span> IMDB:</span>(.+?)</div>||}
starrating.modify {cleanup}
temp_1.modify {substring(type=regex)|'starrating' "\A(\d).+?от"}
starrating.modify {clear('temp_1' "")} * clear if no value
starrating.modify {addstart(not "")|IMDb: }
episode.scrub {regex||<span>Епизоди:</span>(.+?)</div>||}
episode.modify {cleanup}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index.modify {set()|http://tv.boxbg.net/}
*index_site_channel.scrub {regex||alt="(.+?)">||}
*index_site_id.scrub {regex||<a href="http://tv.boxbg.net/channel/(.+?)">||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
