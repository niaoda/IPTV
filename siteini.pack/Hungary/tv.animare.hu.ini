**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.animare.hu
* @MinSWversion:
* @Revision 1 - [05/015/2017] Netuddki
*   - Added episode system and many details, like Writer, Composer, Subtitle etc.
*   - Refined Grabbing
*   - Fixed rating
* @Revision 0 - [08/01/2015] Francis De Paemeleere
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
*
site {url=tv.animare.hu|timezone=Europe/Budapest|maxdays=21.3|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
site {ratingsystem=HU}
*
site {episodesystem=onscreen} *Enable for Onscreen Episode System
*site {episodesystem=xmltv_ns} *Enable for xmltv_ns Episode System
*
urldate.format {datestring|yyyMMdd}
url_index{url|http://tv.animare.hu/default.aspx?c=|channel|&t=|urldate|}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
index_showsplit.scrub {regex||id="tv\d*".*?class="w1c"||}
index_showsplit.modify {substring(type=regex)|"w2".*?</div></div>}
*
index_start.scrub {regex||class="w33"[^>]*>(\d{2}:\d{2})||}
index_title.scrub {regex||class="w33a"[^>]*>([^>]*?)[\:<]||}
index_subtitle.scrub {regex||class="w33a"[^>]*>[^>]*?\:(.*?)<||}
index_urlshow.scrub {regex||class="w33a"[^>]*?href="(.*?)"||}
index_urlchannellogo.modify {addstart|http://tv.animare.hu/i/o/'config_site_id'.png}
*
index_urlshow.modify {addstart(not="")|http://tv.animare.hu/}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
*
duration.scrub {regex||Időtartam:.*?tvInfo">(\d+)||}
title.modify {addstart|'index_title'}
title.modify {remove(type=regex)|"(\s-\s.*?\s-\s\d+)"}
*
titleoriginal.scrub {regex||<b>Eredeti cím:</b>\s*<br />\s*(.*?)\s*<||}
description.scrub {regex||itemprop="description"[^>]*>(.*?)</div>||}
actor.scrub {regex||itemprop="actors".*?<li>(.*?)</li>||}
director.scrub {regex||itemprop="director"[^>]*>(.*?)</div>||}
writer.scrub {regex||Írta:.*?<li>(.*?)</li>||}
composer.scrub {regex||itemprop="musicBy".*?<li>(.*?)</li>||}
rating.scrub {regex||Korhatár:.*?src="/i/k/(\d+).png||}
category.scrub {regex||class="(?:tvCategory\|biCat)".*?itemprop="genre"[^>]*>(.*?)</||}
temp_3.scrub {regex||Évad:.*?"tvInfo">(\d+)||}
temp_3.modify {addstart(not "")|S}
temp_4.scrub {regex||Epizód:.*?"tvInfo">(.*?)\.||}
temp_4.modify {addstart(not "")|E}
temp_4.modify {addstart('temp_3' not "")|'temp_3'}
episode.modify {set('temp_4' not "" pattern="E'Et1'/'E1'""S'S1'E'Et1'/'E1'""S'S1'E'E1'""E'E1'""S'S1'")|'temp_4'}
productiondate.scrub {regex||<b>Gyártási év:</b>(.*?)</div>||}
showicon.scrub {regex||class="bi"[^<]*background-image:url\('([^']*)'||}
starrating.scrub {regex||votenumtext">([1-9]+,[1-9]+)</div>||}
*
*
category.modify	{cleanup(tags="<"">")}
description.modify {cleanup}
actor.modify {cleanup(tags="<"">")}
composer.modify {cleanup(tags="<"">")}
writer.modify {cleanup(tags="<"">")}
director.modify	{cleanup(tags="<"">")}
productiondate.modify {cleanup(tags="<"">")}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://tv.animare.hu/tvcsatorna.aspx}
*index_site_id.scrub {regex||<a href="/default\.aspx\?c=(\d*)"><img class="channelimg" [^>]*title="[^"]*"||}
*index_site_channel.scrub {regex||<a href="/default\.aspx\?c=\d*"><img class="channelimg" [^>]*title="([^"]*)"||}
*scope.range {(channellist)|end}
*index_site_channel.modify {remove|csatorna műsora}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
